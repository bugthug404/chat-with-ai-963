// The module 'vscode' contains the VS Code extensibility API
// Import the module and reference it with the alias vscode in your code below
import * as vscode from "vscode";
import * as path from "path";

let currentPanel: vscode.WebviewPanel | undefined;

const handleMessage = (message: any) => {
  if (message.question) {
    const userQuestion = message.question;

    if (currentPanel) {
      currentPanel.webview.html = getUpdatedHtml(
        `Question: ${userQuestion} \n this is the bot response `
      );
    }
  }
};

export function activate(context: vscode.ExtensionContext) {
  let disposable = vscode.commands.registerCommand(
    "chat-with-ai-963.chatPanel",
    async () => {
      const panel = vscode.window.createWebviewPanel(
        "chat-with-ai-963.chatPanel",
        "Chat with AI", // Set title here
        vscode.ViewColumn.Beside,
        {
          enableScripts: true,
          retainContextWhenHidden: true,
          localResourceRoots: [
            vscode.Uri.file(path.join(context.extensionPath, "src")),
            vscode.Uri.file(
              path.join(context.extensionPath, "src", "chatPanel.ts")
            ),
          ],
        }
      );
      const htmlPath = vscode.Uri.file(
        path.join(context.extensionPath, "src", "chatPanel.html")
      );
      panel.webview.html = await getHtmlForWebview(htmlPath);
      panel.webview.onDidReceiveMessage(handleMessage);
      currentPanel = panel;

      vscode.window.showInformationMessage("Hello World from Chat with AI!");
    }
  );
  context.subscriptions.push(disposable);
}
async function getHtmlForWebview(htmlPath: vscode.Uri): Promise<string> {
  const htmlContent = await vscode.workspace.fs.readFile(htmlPath);
  return htmlContent.toString();
}

function getUpdatedHtml(response: string): string {
  // Generate HTML content with the bot response
  const htmlContent = `
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Chat with AI</title>
        </head>
        <body>
            <div id="chat-container">
                <p>${response}</p>
                <input type="text" id="user-question" placeholder="Ask Gemini a question..." />
                <button id="send-button">Send</button>
            </div>
            <script src="./chatPanel.js"></script>
        </body>
        </html>
    `;
  return htmlContent;
}

// This method is called when your extension is deactivated
export function deactivate() {}
